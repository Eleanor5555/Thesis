##using TSRexploreR object

library(GenomicRanges)
library(rtracklayer)
library(TSRexploreR)
library(filesstrings)
library(ggplot2)
library(dplyr)
library(CAGEr)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm10)
library(Biostrings)
library(JASPAR2022)
library(TFBSTools)
library(motifmatchr)
library(biomaRt)

##annotating biotypes
ensembl <- useEnsembl(biomart = "ensembl", dataset = "mmusculus_gene_ensembl")
annotations <- getBM(attributes = c('ensembl_transcript_id', 'transcript_biotype'),
                     filters = 'ensembl_transcript_id',
                     values = diff_features$transcriptId,
                     mart = ensembl)
# Merge the annotations with your data frame
diff_features <- merge(diff_features, annotations, by.x = "transcriptId", by.y = "ensembl_transcript_id", all.x = TRUE)

#looking at enhancers
enhancer_regions <- rtracklayer::import("F5.mm10.enhancers.bed.gz", format = "BED")
granges=makeGRangesFromDataFrame(diff_features,
                         keep.extra.columns=FALSE,
                         ignore.strand=FALSE,
                         seqinfo=NULL,
                         seqnames.field=c("seqnames", "seqname",
                                          "chromosome", "chrom",
                                          "chr", "chromosome_name",
                                          "seqid"),
                         start.field="start",
                         end.field=c("end", "stop"),
                         strand.field="strand",
                         starts.in.df.are.0based=FALSE)
seqlevels(enhancer_regions) <- sub("^chr", "", seqlevels(enhancer_regions))
overlapping_enhancers <- subsetByOverlaps(granges, enhancer_regions)

# Annotate overlapping regions as eRNAs
overlapping_enhancers$biotype <- "eRNA"
overlapping_enhancers <- as.data.frame(overlapping_enhancers)
# Merge the original dataframe with the eRNA annotations
diff_features2 <- merge(diff_features, overlapping_enhancers, 
                     by = c("seqnames", "start", "end"), all.x = TRUE)

#motif enrichment
# Example: Retrieve the PWM for the TATA box motif (MA0108.1)
opts <- list()
opts <- list()
opts[["species"]] <- "Mus musculus"
opts[["collection"]] <- "CORE"
opts[["all_versions"]] <- FALSE
TATA_pfm <- getMatrixByName(JASPAR2022, name = "TBP")
# Convert to a PWM
TATA_pwm <- toPWM(TATA_pfm)

#test with CAGE
granges=makeGRangesFromDataFrame(exp@counts[["TSSs"]][["raw"]][["ESOS25.3.bed"]],
                                 keep.extra.columns=FALSE,
                                 ignore.strand=FALSE,
                                 seqinfo=NULL,
                                 seqnames.field=c("seqnames", "seqname",
                                                  "chromosome", "chrom",
                                                  "chr", "chromosome_name",
                                                  "seqid"),
                                 start.field="start",
                                 end.field=c("end", "stop"),
                                 strand.field="strand",
                                 starts.in.df.are.0based=FALSE)
seqlevels(granges) <- paste0("chr", seqlevels(granges))
# Define the window size around TSSs (e.g., 50 bp upstream and downstream)
window_size <- 50
tss_windows <- promoters(granges, upstream = window_size, downstream = window_size)

# Extract sequences from the reference genome (e.g., using BSgenome.Hsapiens.UCSC.hg38)
tss_sequences <- getSeq(BSgenome.Mmusculus.UCSC.mm10, tss_windows)
motifHits <- matchMotifs(TATA_pwm, tss_sequences, out = "matches")
mmMatrix <- motifMatches(motifHits)
totalMotifOccurence <- colSums(mmMatrix)
totalMotifOccurence <- stack(totalMotifOccurence)

